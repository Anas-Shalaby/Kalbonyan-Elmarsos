{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/zahran/Desktop/React/01-starting-setup/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import React from\"react\";import Chart from\"../chart/Chart\";import{jsx as _jsx}from\"react/jsx-runtime\";var ExpensesChart=function ExpensesChart(props){var chartDataPoints=[{label:\"Jan\",value:0},{label:\"Fab\",value:0},{label:\"Mar\",value:0},{label:\"Apr\",value:0},{label:\"Jun\",value:0},{label:\"Jul\",value:0},{label:\"Aug\",value:0},{label:\"Sep\",value:0},{label:\"Oct\",value:0},{label:\"Nov\",value:0},{label:\"Dec\",value:0}];var _iterator=_createForOfIteratorHelper(props.expenses),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var expense=_step.value;var expenseMonth=expense.date.getMonth();// Starting at zero\nchartDataPoints[expenseMonth].value+=expense.amount;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return/*#__PURE__*/_jsx(Chart,{dataPoints:chartDataPoints});};export default ExpensesChart;","map":{"version":3,"names":["React","Chart","ExpensesChart","props","chartDataPoints","label","value","expenses","expense","expenseMonth","date","getMonth","amount"],"sources":["C:/Users/zahran/Desktop/React/01-starting-setup/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\r\nimport Chart from \"../chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    {\r\n      label: \"Jan\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Fab\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Mar\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Apr\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Jun\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Jul\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Aug\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Sep\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Oct\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Nov\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Dec\",\r\n      value: 0,\r\n    },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // Starting at zero\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n"],"mappings":"6JAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,MAAP,KAAkB,gBAAlB,C,2CAEA,GAAMC,cAAa,CAAG,QAAhBA,cAAgB,CAACC,KAAD,CAAW,CAC/B,GAAMC,gBAAe,CAAG,CACtB,CACEC,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,CAFT,CADsB,CAKtB,CACED,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,CAFT,CALsB,CAStB,CACED,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,CAFT,CATsB,CAatB,CACED,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,CAFT,CAbsB,CAiBtB,CACED,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,CAFT,CAjBsB,CAqBtB,CACED,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,CAFT,CArBsB,CAyBtB,CACED,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,CAFT,CAzBsB,CA6BtB,CACED,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,CAFT,CA7BsB,CAiCtB,CACED,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,CAFT,CAjCsB,CAqCtB,CACED,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,CAFT,CArCsB,CAyCtB,CACED,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,CAFT,CAzCsB,CAAxB,CAD+B,yCAgDTH,KAAK,CAACI,QAhDG,YAgD/B,+CAAsC,IAA3BC,QAA2B,aACpC,GAAMC,aAAY,CAAGD,OAAO,CAACE,IAAR,CAAaC,QAAb,EAArB,CAA8C;AAC9CP,eAAe,CAACK,YAAD,CAAf,CAA8BH,KAA9B,EAAuCE,OAAO,CAACI,MAA/C,CACD,CAnD8B,qDAoD/B,mBAAO,KAAC,KAAD,EAAO,UAAU,CAAER,eAAnB,EAAP,CACD,CArDD,CAuDA,cAAeF,cAAf"},"metadata":{},"sourceType":"module"}